import java.util.*;
import java.lang.*;
import java.io.*;


// The main method must be in a class named "Main".
class Main {
    public static void main(String[] args) {
        //dx와 dy의 조합으로 상 하 좌 우를 구현
        int[] dx = {0, 0, -1, 1};
        int[] dy = {-1, 1, 0 ,0};

        char[] move = {'L', 'R', 'U', 'D'};

        int x = 1, y = 1;

        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        if(n < 1 || n > 100) return;

        sc.nextLine(); //버퍼 비우기
        char[] plans = sc.nextLine().toCharArray(); //nextLine으로 받을 땐 String으로 받지만 이걸 CharArray로 바꾸기위해 toCharArray를 사용

        /*
        //이런 방식은 x + dx[j] 와 y + dy[j]를 매번 두번씩 해줘야 되서 비효율적임
        for(int i = 0 ; i < plans.length; i++){
            char plan = plans[i];
            for(int j = 0 ; j < move.length ; j++){
                if(plan != move[j]) continue;
                else if( x + dx[j] > 0 && y + dy[j] > 0 && x + dx[j] <= n && y +dy[j] <= n) { // 1,1이 시작점이니깐 1미만과 100초과는 범위를 넘어감.
                    x += dx[j];
                    y += dy[j];
                }
            }
        }
        */
        for(int i = 0 ; i < plans.length ; i++){
            char plan = plans[i];
            for(int j = 0 ; j < move.length; j++){
                if(plan == move[j]){
                    int nx = x + dx[j];
                    int ny = y + dy[j];
                    if(nx > 0 && nx <= n && ny > 0 && ny <= n){
                        x = nx;
                        y = ny;
                    }
                    break;
                }
            }
        }

        System.out.println(x + " " + y);

    }
}
